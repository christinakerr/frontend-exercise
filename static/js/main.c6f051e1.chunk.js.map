{"version":3,"sources":["components/Header/Header.js","components/Job/Job.js","pages/Listings/Listings.js","components/Form/Form.js","pages/AddEdit/AddEdit.js","pages/NotFound.js","pages/Container.js","App.js","index.js"],"names":["Header","className","src","alt","Job","props","data-testid","title","location","posted","sponsorship","status","to","id","Listings","jobMap","jobCount","jobs","length","map","job","key","Form","onSubmit","submitJob","htmlFor","type","name","placeholder","titleValue","locationValue","sponsorshipValue","value","statusValue","submitValue","AddEdit","url","useLocation","isEditPage","pathname","jobToEdit","newUrl","replace","i","defaultValue","todaysDate","today","Date","date","getDate","month","getMonth","getFullYear","event","preventDefault","content","target","elements","console","log","trim","jobObject","updateJob","shortid","generate","addJob","alert","NotFound","Container","useState","setJobs","substring","concat","history","push","newJob","newArray","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6f051e1.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Header.css\"\n\nfunction Header() {\n    return (\n        <div className=\"header-bg\">\n            <header>\n                <img src=\"https://via.placeholder.com/36\" alt=\"Placeholder avatar\" />\n                <div>\n                    <h4>Julie Howard</h4>\n                    <h6>Admin</h6>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport \"./Job.css\"\n\nfunction Job(props) {\n\n    return (\n        <div data-testid=\"job\" className=\"job-row job-grid\">\n            <div className=\"job-title-col\">\n                <div className=\"job-item\">{props.title}</div>\n                <div className=\"job-location\">{props.location}</div>\n            </div>\n            <div className=\"center job-item job-item-mobile\"><span className=\"mobile-only\">Posted: </span>{props.posted}</div>\n            <div className=\"center job-item job-item-mobile\"><span className=\"mobile-only\">Sponsorship: </span>{props.sponsorship}</div>\n            <div className=\"center job-item job-item-mobile\"><span className=\"mobile-only\">Status: </span>{props.status}</div>\n            <Link to={\"/edit/\" + props.id} data-testid=\"edit-job-btn\" className=\"right edit-btn-mobile btn-secondary\">Edit</Link>\n        </div>\n    );\n}\n\nexport default Job;\n","import React from 'react'\nimport Job from \"../../components/Job/Job\";\nimport { Link } from \"react-router-dom\"\nimport \"./Listings.css\"\n\nfunction Listings(props) {\n    let jobCount = 0;\n    let jobMap;\n\n    if (props.jobs) {\n        jobCount = props.jobs.length\n        jobMap = props.jobs.map(job => {\n            return <Job key={job.key} id={job.key} title={job.title} location={job.location} posted={job.posted} sponsorship={job.sponsorship} status={job.status} />\n        })\n    }\n\n    return (\n        <main data-testid=\"jobs-page\">\n            <div className=\"listings-title\">\n                <div>\n                    <h1>Jobs</h1>\n                    <p>{jobCount} listings</p>\n                </div>\n                <Link to=\"/add\" data-testid=\"add-job-btn\" className=\"btn-primary\">Add Job</Link>\n            </div>\n            <div className=\"job-grid\">\n                <h2 id=\"title-col-head\" className=\"col-head\">Job Title</h2>\n                <h2 className=\"col-head center job-item-mobile\">Posted</h2>\n                <h2 className=\"col-head center job-item-mobile\">Sponsorship</h2>\n                <h2 className=\"col-head center job-item-mobile\">Status</h2>\n                <div className=\"col-head\"></div>\n            </div>\n            <div>\n                {\n                    jobMap ? jobMap : <h4>No jobs found.</h4>\n                }\n            </div>\n\n        </main>\n    );\n}\n\nexport default Listings;","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport \"./Form.css\"\n\nfunction Form(props) {\n\n    return (\n        <form onSubmit={props.submitJob} data-testid=\"form\">\n            <label htmlFor=\"title\">\n                <h4>Job Title</h4>\n                <p>What is the name of the role?</p>\n            </label>\n            <input data-testid=\"input-title\" type=\"text\" id=\"title\" name=\"title\" placeholder=\"e.g. Software Engineer\" {...props.titleValue}></input>\n            <label htmlFor=\"location\">\n                <h4>Location</h4>\n                <p>Where is this job?</p>\n            </label>\n            <input data-testid=\"input-location\" type=\"text\" id=\"location\" name=\"location\" placeholder=\"e.g. Chicago, IL\" {...props.locationValue}></input>\n            <label htmlFor=\"sponsorship\">\n                <h4>Sponsorship</h4>\n                <p>Do you want to promote this job?</p>\n            </label>\n            <select data-testid=\"input-sponsorship\" id=\"sponsorship\" name=\"sponsorship\" {...props.sponsorshipValue}>\n                <option value=\"Free\">Free</option>\n                <option data-testid=\"opt-spon\" value=\"Sponsored\">Sponsored</option>\n            </select>\n            <label htmlFor=\"status\">\n                <h4>Status</h4>\n                <p>Are you ready to make this job listing public?</p>\n            </label>\n            <select data-testid=\"input-status\" id=\"status\" name=\"status\" {...props.statusValue}>\n                <option value=\"Open\">Open</option>\n                <option data-testid=\"opt-paused\" value=\"Paused\">Paused</option>\n                <option value=\"Closed\">Closed</option>\n            </select>\n            <hr className=\"hr\" />\n            <div className=\"btn-row\">\n                <Link to=\"/\" data-testid=\"cancel-btn\" className=\"btn-secondary form-btn\">Cancel</Link>\n                <input type=\"submit\" value={props.submitValue} className=\"btn-primary form-btn submit-btn\" data-testid=\"submit-btn\"></input>\n            </div>\n        </form>\n    );\n}\n\nexport default Form;\n","import React from 'react'\nimport { useLocation } from \"react-router-dom\"\nimport shortid from 'shortid'\nimport Form from \"../../components/Form/Form\"\nimport \"./AddEdit.css\"\n\nfunction AddEdit(props) {\n\n    const url = useLocation()\n    let isEditPage = true;\n    if (url.pathname === \"/add\") {\n        isEditPage = false;\n    }\n    let titleValue;\n    let locationValue;\n    let sponsorshipValue;\n    let statusValue;\n    let submitValue = \"Add job\"\n    let jobToEdit;\n\n    if (isEditPage) {\n        submitValue = \"Save\";\n        let newUrl = url.pathname.replace(\"/edit/\", \"\");\n\n        for (let i in props.jobs) {\n            if (props.jobs[i].key === newUrl) {\n                jobToEdit = props.jobs[i];\n                break;\n            }\n        }\n\n        titleValue = {\n            defaultValue: jobToEdit.title\n        }\n        locationValue = {\n            defaultValue: jobToEdit.location\n        }\n        sponsorshipValue = {\n            defaultValue: jobToEdit.sponsorship\n        }\n        statusValue = {\n            defaultValue: jobToEdit.status\n        }\n        \n    }\n\n\n    function submitJob(event) {\n        event.preventDefault();\n        const content = event.target.elements;\n        console.log(\"Content: \")\n        console.log(content)\n        if (!content.title.value.trim() || !content.location.value.trim()) {\n            alert(\"Please fill in all fields.\")\n            return;\n        }\n        if (!isEditPage) {\n            const jobObject = {\n                title: content.title.value,\n                location: content.location.value,\n                posted: todaysDate(),\n                sponsorship: content.sponsorship.value,\n                status: content.status.value,\n                key: shortid.generate()\n            }\n            return props.addJob(jobObject)\n        } else {\n            const jobObject = {\n                title: content.title.value,\n                location: content.location.value,\n                posted: jobToEdit.posted,\n                sponsorship: content.sponsorship.value,\n                status: content.status.value,\n                key: jobToEdit.key\n            }\n            return props.updateJob(jobObject, jobToEdit)\n        }\n    }\n\n    function todaysDate() {\n        const today = new Date();\n        let date = today.getDate();\n        if (today.getDate() < 10) {\n            date = \"0\" + today.getDate()\n        }\n        let month = today.getMonth() + 1;\n        if (month < 10) {\n            month = \"0\" + (today.getMonth() + 1)\n        }\n        return month + \"/\" + date + \"/\" + today.getFullYear()\n    }\n\n\n    return (\n        <main>\n            <div className=\"add-edit-container\">\n                {\n                    isEditPage ?\n                        <div>\n                            <h1 data-testid=\"add-edit-heading\">Edit job</h1>\n                            <h2>Edit the information for your job listing.</h2>\n                        </div>\n                        :\n                        <div>\n                            <h1 data-testid=\"add-edit-heading\">Add a new job</h1>\n                            <h2>Fill out the information for your new job listing.</h2>\n                        </div>\n                }\n                <hr className=\"hr\" />\n                <div>\n                    <Form jobs={props.jobs} isEditPage={isEditPage} submitJob={submitJob} titleValue={titleValue} locationValue={locationValue} sponsorshipValue={sponsorshipValue} statusValue={statusValue} submitValue={submitValue} />\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default AddEdit;","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nfunction NotFound() {\n    return (\n        <div>\n            <h1>Page Not Found</h1>\n            <Link to=\"/\"><button className=\"btn-primary\">Return to Listings</button></Link>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React, { useState } from 'react';\nimport Listings from \"./Listings/Listings\";\nimport AddEdit from \"./AddEdit/AddEdit\";\nimport NotFound from \"./NotFound\"\nimport shortid from \"shortid\"\n\nfunction Container( props ) {\n    \n    const [jobs, setJobs] = useState(\n        [\n            {\n                title: \"Product Manager\",\n                location: \"Austin, TX\",\n                posted: \"10/04/2020\",\n                sponsorship: \"Free\",\n                status: \"Open\",\n                key: shortid.generate()\n            },\n            {\n                title: \"CEO\",\n                location: \"Austin, TX\",\n                posted: \"12/30/2020\",\n                sponsorship: \"Sponsored\",\n                status: \"Paused\",\n                key: shortid.generate()\n            },\n            {\n                title: \"Software Engineer\",\n                location: \"Seattle, WA\",\n                posted: \"11/18/2020\",\n                sponsorship: \"Free\",\n                status: \"Closed\",\n                key: shortid.generate()\n            }\n        ]\n    )\n\n    function addJob(job){\n        setJobs(jobs.concat(job));\n        props.history.push(\"/\")\n        alert(\"Job successfully added.\")\n    }\n\n    function updateJob(newJob, jobToEdit){\n        const newArray = jobs.map(job => {\n            if (job===jobToEdit){\n                return newJob\n            } else {\n                return job\n            }\n        })\n        setJobs(newArray);\n        props.history.push(\"/\")\n        alert(\"Job successfully edited.\")\n    }\n\n    const url = props.location.pathname;\n\n    if (url === \"/\"){\n        return <Listings jobs={ jobs }/>\n    } else if (url === \"/add\" || url.substring(0,5) === \"/edit\"){\n        return <AddEdit addJob={addJob} updateJob={updateJob} jobs={jobs}/>\n    } else {\n        return <NotFound />\n    }\n}\n\nexport default Container;\n\n\n\n\n","import React from \"react\";\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\"\nimport Container from \"./pages/Container\";\nimport NotFound from \"./pages/NotFound\"\n\nfunction App() {\n\n  return (\n    <BrowserRouter basename=\"/frontend-exercise\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Container} />\n        <Route path=\"/edit/:id\" component={Container} />\n        <Route exact path=\"/add\" component={Container} />\n        <Route component ={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}